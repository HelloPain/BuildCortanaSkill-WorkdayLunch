1.	人在对话时的思考不是栈式而更偏向网络式启发，对话片段之间的关系应该是联通的，只要这个网络节点（对话类型）够多且充分连通，应该能满足用户需求也符合人的思考方式。
    定势思维也不过是部分节点按照固定的顺序组成的一个超级节点而已，并不能因此将人的思维看作是栈。如果将用户思维看作是栈，对话将变得机械化。
2.	但如果对话范围太广，可见这样的穷举型状态机的结构很难实现，只讨论小范围内的网络化
3.	为了规范化这个对话网络，我们可以把边，或者说状态转移/变换按照不同因素分类，这些因素就成了对话网络的维度
4.	建立在网络上的模型，可以通过机器学习调整边的连接关系，使边定义摆脱编程者的思维限制。
5.	由此引发了“什么应该固定在程序逻辑中，什么不应该固定而需要自动调整”的问题
6.	这个系统的局限取决于固定在程序逻辑的部分，如果节点是确定的，即无法自动生成新的对话类型，局限还是取决于编程者对对话类型的预先定义
7.	对话可以由子对话组成，什么对话是不可再分的原子对话？如果说某对话是由子对话根据定势思维顺序确定的，那么这个定势思维的程度怎么界定？什么样的粒度是足够的？
